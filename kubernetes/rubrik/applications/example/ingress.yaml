apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: example-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: "192.168.0.0/16,10.8.0.0/16" # Forbid access from external networks
spec:
  ingressClassName: ingress-nginx-internal
  rules:
  - host: example.rubrik.lab.home.morey.tech
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: guestbook-ui
            port:
              name: http
  tls:
    - hosts:
        - example.rubrik.lab.home.morey.tech
      secretName: example.rubrik.lab.home.morey.tech
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: example-ingress-external
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/ssl-passthrough: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    # Enable External DNS for this Ingress.
    external-dns.alpha.kubernetes.io/include: 'true'
    # Set the target to the cluster apex domain.
    # Defaults to the LoadBalancer IP, which is local only.
    external-dns.alpha.kubernetes.io/target: rubrik.lab.home.morey.tech
    external-dns.alpha.kubernetes.io/cloudflare-proxied: 'true'
spec:
  ingressClassName: ingress-nginx-external
  rules:
  - host: example.morey.tech
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: guestbook-ui
            port:
              name: http
  tls:
  - hosts:
    - example.morey.tech
    secretName: example.morey.tech
