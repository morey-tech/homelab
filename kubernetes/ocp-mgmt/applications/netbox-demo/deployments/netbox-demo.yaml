apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: netbox
    app.kubernetes.io/instance: netbox-demo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: netbox
    app.kubernetes.io/version: v4.3.4
    helm.sh/chart: netbox-6.0.59
  name: netbox-demo
  namespace: netbox-demo
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: netbox
      app.kubernetes.io/instance: netbox-demo
      app.kubernetes.io/name: netbox
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 7b488a187acade5fa083ae77926b4cf8bb18809345431f8cb361983883b0e49c
        checksum/secret: b903406fd6bd07cb5a1b91a05d43a353b6826a49d2fee3c2456eb3346a9f2eb7
      labels:
        app.kubernetes.io/component: netbox
        app.kubernetes.io/instance: netbox-demo
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: netbox
        app.kubernetes.io/version: v4.3.4
        helm.sh/chart: netbox-6.0.59
    spec:
      automountServiceAccountToken: false
      containers:
      - env:
        - name: SUPERUSER_NAME
          valueFrom:
            secretKeyRef:
              key: username
              name: netbox-demo-superuser
        - name: SUPERUSER_EMAIL
          valueFrom:
            secretKeyRef:
              key: email
              name: netbox-demo-superuser
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        image: ghcr.io/netbox-community/netbox:v4.3.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status/applications/netbox/processes/running
            port: nginx-status
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: netbox
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8081
          name: nginx-status
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /login/
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 750m
            ephemeral-storage: 2Gi
            memory: 1536Mi
          requests:
            cpu: 500m
            ephemeral-storage: 50Mi
            memory: 1024Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          failureThreshold: 100
          httpGet:
            path: /login/
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /etc/netbox/config/configuration.py
          name: config
          readOnly: true
          subPath: configuration.py
        - mountPath: /run/config/netbox
          name: config
          readOnly: true
        - mountPath: /run/secrets/netbox
          name: secrets
          readOnly: true
        - mountPath: /tmp
          name: netbox-tmp
        - mountPath: /opt/netbox/netbox/media
          name: media
          subPath: ''
        - mountPath: /opt/unit
          name: optunit
        - mountPath: /run/secrets/superuser_password
          name: secrets
          readOnly: true
          subPath: superuser_password
        - mountPath: /run/secrets/superuser_api_token
          name: secrets
          readOnly: true
          subPath: superuser_api_token
      initContainers:
      - command:
        - /bin/sh
        - -c
        - mkdir -p /opt/unit/state /opt/unit/tmp
        image: docker.io/busybox:1.37.0
        imagePullPolicy: IfNotPresent
        name: init-dirs
        resources:
          limits:
            cpu: 150m
            ephemeral-storage: 2Gi
            memory: 192Mi
          requests:
            cpu: 100m
            ephemeral-storage: 50Mi
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /opt/unit
          name: optunit
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      serviceAccountName: netbox-demo
      volumes:
      - configMap:
          name: netbox-demo
        name: config
      - name: secrets
        projected:
          sources:
          - secret:
              items:
              - key: secret_key
                path: secret_key
              name: netbox-demo-config
          - secret:
              items:
              - key: email_password
                path: email_password
              name: netbox-demo-config
          - secret:
              items:
              - key: password
                path: superuser_password
              - key: api_token
                path: superuser_api_token
              name: netbox-demo-superuser
          - secret:
              items:
              - key: password
                path: db_password
              name: netbox-demo-postgresql
          - secret:
              items:
              - key: valkey-password
                path: tasks_password
              name: netbox-demo-valkey
          - secret:
              items:
              - key: valkey-password
                path: cache_password
              name: netbox-demo-valkey
      - emptyDir:
          medium: Memory
        name: netbox-tmp
      - emptyDir:
          medium: Memory
        name: optunit
      - name: media
        persistentVolumeClaim:
          claimName: netbox-demo-media
