apiVersion: argoproj.io/v1beta1
kind: ArgoCD
metadata:
  name: cluster-argocd  # Can't be named "openshift-gitops".
  namespace: openshift-gitops
spec:
  applicationSet:
    resources:
      limits:
        # cpu: "2"
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
    webhookServer:
      ingress:
        enabled: false
      route:
        enabled: false
  controller:
    processors: {}
    resources:
      limits:
        # cpu: "2"
        memory: 2Gi
      requests:
        cpu: 250m
        memory: 1Gi
    sharding: {}
  grafana:
    enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        # cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
    route:
      enabled: false
  ha:
    enabled: false
    resources:
      limits:
        # cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  initialSSHKnownHosts: {}
  kustomizeBuildOptions: '--enable-helm'
  monitoring:
    enabled: false
  notifications:
    enabled: false
  prometheus:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
  rbac:
    defaultPolicy: ""
    policy: |
      g, system:cluster-admins, role:admin
      g, cluster-admins, role:admin

      ## Builtin Policy ##
      p, role:readonly, applications, get, */*, allow
      p, role:readonly, applicationsets, get, */*, allow
      p, role:readonly, certificates, get, *, allow
      p, role:readonly, clusters, get, *, allow
      p, role:readonly, repositories, get, *, allow
      p, role:readonly, write-repositories, get, *, allow
      p, role:readonly, projects, get, *, allow
      p, role:readonly, accounts, get, *, allow
      p, role:readonly, gpgkeys, get, *, allow
      p, role:readonly, logs, get, */*, allow

      p, role:admin, applications, create, */*, allow
      p, role:admin, applications, update, */*, allow
      p, role:admin, applications, update/*, */*, allow
      p, role:admin, applications, delete, */*, allow
      p, role:admin, applications, delete/*, */*, allow
      p, role:admin, applications, sync, */*, allow
      p, role:admin, applications, override, */*, allow
      p, role:admin, applications, action/*, */*, allow
      p, role:admin, applicationsets, get, */*, allow
      p, role:admin, applicationsets, create, */*, allow
      p, role:admin, applicationsets, update, */*, allow
      p, role:admin, applicationsets, delete, */*, allow
      p, role:admin, certificates, create, *, allow
      p, role:admin, certificates, update, *, allow
      p, role:admin, certificates, delete, *, allow
      p, role:admin, clusters, create, *, allow
      p, role:admin, clusters, update, *, allow
      p, role:admin, clusters, delete, *, allow
      p, role:admin, repositories, create, *, allow
      p, role:admin, repositories, update, *, allow
      p, role:admin, repositories, delete, *, allow
      p, role:admin, write-repositories, create, *, allow
      p, role:admin, write-repositories, update, *, allow
      p, role:admin, write-repositories, delete, *, allow
      p, role:admin, projects, create, *, allow
      p, role:admin, projects, update, *, allow
      p, role:admin, projects, delete, *, allow
      p, role:admin, accounts, update, *, allow
      p, role:admin, gpgkeys, create, *, allow
      p, role:admin, gpgkeys, delete, *, allow
      p, role:admin, exec, create, */*, allow

      g, role:admin, role:readonly
    scopes: '[groups, username]'
  redis:
    resources:
      limits:
        # cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  repo:
    resources:
      limits:
        # cpu: "1"
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 256Mi
  resourceExclusions: |
    - apiGroups:
      - tekton.dev
      clusters:
      - '*'
      kinds:
      - TaskRun
      - PipelineRun
  server:
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        # cpu: 500m
        memory: 256Mi
      requests:
        cpu: 125m
        memory: 128Mi
    route:
      enabled: true
    service:
      type: ""
  sso:
    dex:
      openShiftOAuth: true
      resources:
        limits:
          # cpu: 500m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 128Mi
    provider: dex
  tls:
    ca: {}
