---
- name: Set Up cluster
  hosts: ocp-lab.rh-lab.morey.tech  # dummy host to represent the cluster
  gather_facts: false  # Hosts aren't available, since this playbook creates them.

  vars:
    create_assisted_installer: true

  tasks:
    - name: Create Assisted Installer Cluster  # noqa: run-once[task]
      rhpds.assisted_installer.create_cluster:
        name: "{{ cluster_name }}"
        openshift_version: "{{ cluster_version }}"
        base_dns_domain: "{{ cluster_dns_zone }}"
        offline_token: "{{ rh_console_offline_token }}"
        pull_secret: "{{ rh_console_pull_secret | to_json }}"
        high_availability_mode: "{{ high_availability_mode }}"
        cluster_network_cidr: "{{ cluster_network_cidr }}"
        cluster_network_host_prefix: "{{ cluster_network_host_prefix }}"
        service_networks: "{{ service_networks }}"
        machine_networks: "{{ machine_networks }}"
        api_vips: "{{ api_vips }}"
        ingress_vips: "{{ ingress_vips }}"
        ssh_public_key: "{{ ssh_authorized_keys }}"
      register: newcluster
      when: create_assisted_installer

    - name: Print link to assisted installer # noqa: run-once[task]
      ansible.builtin.debug:
        msg: "https://console.redhat.com/openshift/assisted-installer/clusters/{{ newcluster.result.id }}"
      when: create_assisted_installer

    # Download discovery.iso to storage-pve.
    - name: Create Discovery ISO # noqa: run-once[task]
      rhpds.assisted_installer.create_infra_env:
        name: "{{ cluster_name }}-infra-env"
        image_type: "{{ image_type }}"
        cluster_id: "{{ newcluster.result.id }}"
        ssh_authorized_key: "{{ ssh_authorized_keys }}"
        offline_token: "{{ rh_console_offline_token }}"
        pull_secret: "{{ rh_console_pull_secret | to_json }}"
        openshift_version: "{{ cluster_version }}"
      register: newinfraenv
      when: create_assisted_installer

    - name: Download Discovery ISO  # noqa: run-once[task]
      ansible.builtin.get_url:
        url: "{{ newinfraenv.result.download_url }}"
        dest: "/mnt/pve/storage-pve/template/iso/{{ cluster_name }}-{{ newcluster.result.id }}-discovery.iso"
        mode: '0777'
        force: true
      delegate_to: "{{ groups['pvems'][0] }}"  # Pick a host from the hypervisor group
      when: create_assisted_installer
      # https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_async.html#run-tasks-concurrently-poll-0

    - name: Create DHCP static mapping
      pfsensible.core.pfsense_dhcp_static:
        netif: opt3  # rh_lab
        hostname: "{{ hostvars[item].inventory_hostname_short }}"
        macaddr: "{{ hostvars[item].mac_address }}"
        ipaddr: "{{ hostvars[item].ip_address }}"
        ddnsdomainkeyalgorithm: "hmac-md5"  # fixes diff.
        state: present
      delegate_to: pfsense.home.morey.tech
      throttle: 1
      loop: "{{ groups[nodes_group] }}"

    - name: Add DNS zone to named.conf.options  # noqa: run-once[task]
      ansible.builtin.blockinfile:
        path: /etc/bind/named.conf.local
        block: |
          zone "{{ cluster_name }}.{{ cluster_dns_zone }}" {
              type master;
              file "/etc/bind/db.{{ cluster_name }}.{{ cluster_dns_zone }}";
          };
        marker: "// {mark} ANSIBLE MANAGED BLOCK"
        insertafter: "EOF"
        append_newline: true
        prepend_newline: true
        state: present
      notify: Restart BIND9
      delegate_to: dns.rh-lab.morey.tech

    - name: Initialize node_dns_records
      ansible.builtin.set_fact:
        node_dns_records: []
      delegate_to: dns.rh-lab.morey.tech

    - name: Add each node DNS record to variable
      ansible.builtin.set_fact:
        node_dns_records: "{{ node_dns_records + [{'name': item.split('.')[0], 'ip': hostvars[item].ip_address}] }}"
      loop: "{{ groups['ocp-lab-nodes'] }}"
      delegate_to: dns.rh-lab.morey.tech

    - name: Configure DNS zone  # noqa: run-once[task]
      ansible.builtin.template:
        src: db.j2
        dest: "/etc/bind/db.{{ cluster_name }}.{{ cluster_dns_zone }}"
        mode: '0644'
      notify: Restart BIND9
      vars:
        dns_zone: "{{ cluster_name }}.{{ cluster_dns_zone }}"
        dns_records: "{{ node_dns_records + [
          { 'name': 'api', 'ip': api_vips.0.ip },
          { 'name': 'api-int', 'ip': api_vips.0.ip },
          { 'name': '*.apps', 'ip': ingress_vips.0.ip }] }}"
        dns_ip_address: "{{ hostvars['dns.rh-lab.morey.tech'].ip_address }}"
      delegate_to: dns.rh-lab.morey.tech

    - name: Create new PVE pool  # noqa: run-once[task]
      community.general.proxmox_pool:
        api_user: "{{ pve_api_user }}"
        api_token_id: "{{ pve_api_token_id }}"
        api_token_secret: "{{ pve_api_token_secret }}"
        api_host: "{{ pve_api_host }}"
        poolid: "{{ cluster_name }}"
        comment: "{{ cluster_name }} cluster"

    - name: Create VMs
      community.general.proxmox_kvm:
        api_user: "{{ pve_api_user }}"
        api_token_id: "{{ pve_api_token_id }}"
        api_token_secret: "{{ pve_api_token_secret }}"
        api_host: "{{ pve_api_host }}"
        vmid: "{{ hostvars[item].pve_vm_id }}"
        name: "{{ hostvars[item].inventory_hostname_short }}"
        node: "{{ hostvars[item].pve_node }}"
        pool: "{{ hostvars[item].cluster_name }}"
        cpu: x86-64-v2-AES
        cores: 8
        memory: 16384
        ide:
          ide2: "storage-pve:iso/{{ hostvars[item].cluster_name }}-{{ newcluster.result.id }}-discovery.iso,media=cdrom"
        scsihw: virtio-scsi-single
        scsi:
          scsi0: 'local-nvme:128,iothread=1'
        net:
          net0: 'virtio={{ hostvars[item].mac_address }},bridge=vmbr0,tag=6,firewall=1'
      loop: "{{ groups[nodes_group] }}"

    - name: Pause before starting VMs
      ansible.builtin.wait_for:
        timeout: 3

    - name: Start VMs
      community.general.proxmox_kvm:
        api_user: "{{ pve_api_user }}"
        api_token_id: "{{ pve_api_token_id }}"
        api_token_secret: "{{ pve_api_token_secret }}"
        api_host: "{{ pve_api_host }}"
        vmid: "{{ hostvars[item].pve_vm_id }}"
        name: "{{ hostvars[item].inventory_hostname_short }}"
        node: "{{ hostvars[item].pve_node }}"
        state: started
      loop: "{{ groups[nodes_group] }}"

    - name: Wait for the hosts to be ready  # noqa: run-once[task]
      rhpds.assisted_installer.wait_for_hosts:
        cluster_id: "{{ newcluster.result.id }}"
        offline_token: "{{ rh_console_offline_token }}"
        expected_hosts: "{{ groups[nodes_group] | length }}"
        wait_timeout: 300  # Usually ready in 3 - 4 minutes with "full" discovery ISO.
      when: create_assisted_installer

    - name: Start cluster installation  # noqa: run-once[task]
      rhpds.assisted_installer.install_cluster:
        cluster_id: "{{ newcluster.result.id }}"
        offline_token: "{{ rh_console_offline_token }}"
        wait_timeout: 1200
      when: create_assisted_installer

    - name: Obtain OpenShift cluster credentials  # noqa: run-once[task]
      register: credentials
      rhpds.assisted_installer.get_credentials:
        cluster_id: "{{ newcluster.result.id }}"
        offline_token: "{{ rh_console_offline_token }}"
      when: create_assisted_installer

    - name: Display credentials  # noqa: run-once[task]
      ansible.builtin.debug:
        var: credentials.result
      when: create_assisted_installer

  handlers:
    - name: Restart BIND9
      ansible.builtin.service:
        name: bind9
        state: reloaded
      delegate_to: dns.rh-lab.morey.tech
