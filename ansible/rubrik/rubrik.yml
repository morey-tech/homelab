---
- name: Prepare rubrik nodes for K8s
  hosts:
    - all
  become: true

  tasks:
    - name: Install apt packages
      ansible.builtin.apt:
        name:
          - nfs-common
          - open-iscsi
        state: present
        update_cache: true

    # sudo snap install microk8s --classic
    - name: Install snap packages microk8s and related tools
      community.general.snap:
        name:
          - microk8s
          - jq
          - kubectl
        classic: true

    # sudo usermod -a -G microk8s {{ ansible_user }}
    - name: Apending microk8s group to user {{ ansible_user }}
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: microk8s  # Add the user to a group
        append: true        # Add the user to the group without removing from other groups

    # sudo chown -f -R {{ ansible_user }} ~/.kube
    - name: Set ownership of ~/.kube for {{ ansible_user }}
      ansible.builtin.file:
        path: ~/.kube
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        recurse: true  # Equivalent to -R
        force: true    # Equivalent to -f
        state: directory  # Ensure it's treated as a directory

    - name: Output the microk8s kubeconfig
      ansible.builtin.command: "microk8s config"
      register: kubeconfig
      changed_when: false

    # - name: Enable microk8s ingress
    #   ansible.builtin.command: "microk8s enable ingress"
    #   changed_when: false

    # - name: Display kubeconfig
    #   ansible.builtin.debug:
    #     var: kubeconfig.stdout_lines

    - name: Create .kube directory
      ansible.builtin.file:
        path: "/home/ubuntu/.kube"
        state: directory
        mode: '0750'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Save kubeconfig to environment folder
      run_once: true
      ansible.builtin.copy:
        content: "{{ kubeconfig.stdout }}"
        dest: "/home/ubuntu/.kube/config"
        mode: '0640'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Fetch kubeconfig
      run_once: true
      ansible.builtin.fetch:
        src: "/home/ubuntu/.kube/config"
        dest: "../../kubernetes/rubrik/kubeconfig.yml"
        flat: true
        mode: '0640'
        owner: "{{ ansible_env.USER }}"
